networks:
  forgejo-postgres:

services:
  forgejo:
    container_name: forgejo
    depends_on:
      authentik-server:
        condition: service_started
      caddy:
        condition: service_started
      forgejo-postgres:
        condition: service_healthy
    env_file:
      - path: .env.forgejo
      - path: .env.forgejo.local
    environment:
      - FORGEJO__database__DB_TYPE=postgres
      - FORGEJO__database__HOST=forgejo-postgres:5432
      - FORGEJO__database__NAME=forgejo
      - FORGEJO__database__USER=forgejo
    image: codeberg.org/forgejo/forgejo:13
    networks:
      - authentik-forgejo
      - caddy-forgejo
      - forgejo-postgres
    restart: always
    volumes:
      - forgejo:/data

      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  forgejo-postgres:
    container_name: forgejo-postgres
    env_file:
      - path: .env.forgejo-postgres
      - path: .env.forgejo-postgres.local
    environment:
      - POSTGRES_DB=forgejo
      - POSTGRES_USER=forgejo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s
    image: postgres:17-alpine
    networks:
      - forgejo-postgres
    restart: always
    volumes:
      - forgejo-postgres:/var/lib/postgresql/data

      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

volumes:
  forgejo:
  forgejo-postgres:
