networks:
  authentik-glances:
  authentik-metube:
  authentik-myspeed:
  authentik-postgres:
  authentik-qbittorrent:
  authentik-redis:
  authentik-uptime-kuma:

services:
  authentik-server:
    container_name: authentik-server
    image: ghcr.io/goauthentik/server
    restart: always
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
    env_file:
      - .env.authentik-server
      - .env.authentik-server.local
    # ports:
    #   - 9000:9000
    #   - 9443:9443
    depends_on:
      caddy:
        condition: service_started
      authentik-postgres:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy
    networks:
      - authentik-glances
      - authentik-metube
      - authentik-myspeed
      - authentik-postgres
      - authentik-qbittorrent
      - authentik-redis
      - authentik-uptime-kuma
      - caddy-authentik
    volumes:
      - ./authentik/templates:/templates
      - authentik-media:/media

      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  authentik-worker:
    container_name: authentik-worker
    image: ghcr.io/goauthentik/server
    restart: always
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
    env_file:
      - .env.authentik-worker
      - .env.authentik-worker.local
    depends_on:
      authentik-postgres:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy
    networks:
      - authentik-postgres
      - authentik-redis
    volumes:
      - ./authentik/certs:/certs
      - ./authentik/templates:/templates
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - authentik-media:/media

      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  authentik-postgres:
    container_name: authentik-postgres
    image: docker.io/library/postgres:16-alpine
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    environment:
      POSTGRES_USER: authentik
      POSTGRES_DB: authentik
    env_file:
      - .env.authentik-postgres
      - .env.authentik-postgres.local
    networks:
      - authentik-postgres
      - uptime-kuma-authentik-postgres
    volumes:
      - authentik-postgres:/var/lib/postgresql/data

      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  authentik-redis:
    container_name: authentik-redis
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    networks:
      - authentik-redis
      - uptime-kuma-authentik-redis
    volumes:
      - authentik-redis:/data

      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

volumes:
  authentik-postgres:
  authentik-redis:
  authentik-media:
