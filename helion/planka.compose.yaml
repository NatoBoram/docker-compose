networks:
  caddy-planka:
  planka-postgres:

services:
  planka:
    container_name: planka
    depends_on:
      planka-postgres:
        condition: service_healthy
    env_file:
      - path: .env.planka
      - path: .env.planka.local
    environment:
      - ALLOW_ALL_TO_CREATE_PROJECTS=true
    image: ghcr.io/plankanban/planka
    networks:
      - caddy-planka
      - planka-postgres
    restart: always
    volumes:
      - /var/log/planka.log:/app/logs/planka.log
      - planka-attachments:/app/private/attachments
      - planka-project-background-images:/app/public/project-background-images
      - planka-user-avatars:/app/public/user-avatars

      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  planka-postgres:
    container_name: planka-postgres
    env_file:
      - path: .env.planka-postgres
      - path: .env.planka-postgres.local
    environment:
      - POSTGRES_DB=planka
      - POSTGRES_USER=planka
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U planka -d planka"]
      interval: 10s
      retries: 5
      timeout: 5s
    image: postgres:16-alpine
    networks:
      - planka-postgres
      - uptime-kuma-planka-postgres
    restart: always
    volumes:
      - planka-postgres:/var/lib/postgresql/data

      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

volumes:
  planka-attachments:
  planka-project-background-images:
  planka-user-avatars:

  planka-postgres:
